// <auto-generated />
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Venu.DataAccess.Data;

#nullable disable

namespace Venu.DataAccess.Migrations
{
    [DbContext(typeof(ApplicationDbContext))]
    [Migration("20240523023555_Foriegnkeyoption")]
    partial class Foriegnkeyoption
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.5")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("Venu.Models.Models.Catogory", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<int>("DisplayOrder")
                        .HasColumnType("int");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasMaxLength(30)
                        .HasColumnType("nvarchar(30)");

                    b.HasKey("id");

                    b.ToTable("Catogories");

                    b.HasData(
                        new
                        {
                            id = 1,
                            DisplayOrder = 1,
                            Name = "Test"
                        },
                        new
                        {
                            id = 2,
                            DisplayOrder = 2,
                            Name = "Test1"
                        });
                });

            modelBuilder.Entity("Venu.Models.Models.Product", b =>
                {
                    b.Property<int>("id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("id"));

                    b.Property<string>("Author")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<int>("CatogoryId")
                        .HasColumnType("int");

                    b.Property<string>("Description")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ISBN")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("ImageUrl")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.Property<double>("ListPrice")
                        .HasColumnType("float");

                    b.Property<double>("Price")
                        .HasColumnType("float");

                    b.Property<double>("Price100")
                        .HasColumnType("float");

                    b.Property<double>("Price50")
                        .HasColumnType("float");

                    b.Property<string>("Title")
                        .IsRequired()
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("id");

                    b.HasIndex("CatogoryId");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            id = 1,
                            Author = "Venu",
                            CatogoryId = 1,
                            Description = "Test",
                            ISBN = "SWD7868",
                            ImageUrl = "",
                            ListPrice = 20.0,
                            Price = 30.0,
                            Price100 = 100.0,
                            Price50 = 60.0,
                            Title = "KingKong"
                        },
                        new
                        {
                            id = 2,
                            Author = "Venu1",
                            CatogoryId = 1,
                            Description = "Test1",
                            ISBN = "SWD7869",
                            ImageUrl = "",
                            ListPrice = 30.0,
                            Price = 40.0,
                            Price100 = 100.0,
                            Price50 = 70.0,
                            Title = "KingKong1"
                        },
                        new
                        {
                            id = 3,
                            Author = "Venu2",
                            CatogoryId = 1,
                            Description = "Test1",
                            ISBN = "SWD7870",
                            ImageUrl = "",
                            ListPrice = 30.0,
                            Price = 40.0,
                            Price100 = 100.0,
                            Price50 = 70.0,
                            Title = "KingKong2"
                        },
                        new
                        {
                            id = 4,
                            Author = "Venu3",
                            CatogoryId = 2,
                            Description = "Test1",
                            ISBN = "SWD7871",
                            ImageUrl = "",
                            ListPrice = 30.0,
                            Price = 40.0,
                            Price100 = 100.0,
                            Price50 = 70.0,
                            Title = "KingKong3"
                        });
                });

            modelBuilder.Entity("Venu.Models.Models.Product", b =>
                {
                    b.HasOne("Venu.Models.Models.Catogory", "Catogory")
                        .WithMany()
                        .HasForeignKey("CatogoryId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Catogory");
                });
#pragma warning restore 612, 618
        }
    }
}
